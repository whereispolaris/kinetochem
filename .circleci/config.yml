# Continuous Integration to a WP Engine install
# PHP CircleCI 2.1 configuration file

# Requirements:
# 1. In CircleCI settings, add environment variables for your site's installs:
#     * WPE_PRODUCTION_INSTALL=thenameofyourproductioninstall
#     * WPE_STAGING_INSTALL=thenameofyourstaginginstall
#     * WPE_DEVELOPMENT_INSTALL=thenameofyourdevelopmentinstall
# 2. In your repo, have two files
#     * `./.gitignores/__default`    -- Excludes any compiled files
#     * `./.gitignores/__deployment` -- Includes all compiled files
# 3. In your package.json file, define scripts:
#     * `lint`,
#     * `visual-regression` (optional)
#     * `build`
#     @link https://yarnpkg.com/lang/en/docs/package-json/#toc-scripts
# 4. Install and configure WP-Browser & Codeception testing suite (optional)
#     @link https://github.com/lucatume/wp-browser
#     @link https://codeception.com

version: 2
jobs:
  build:
    docker:
      - image: debian:stretch

    steps:
      - checkout

      - run:
          name: Greeting
          command: echo Hello, world.

      - run:
          name: Print the Current Time
          command: date

jobs:

  build_deploy:
    description: Build and deploy our code
    parameters:
      wpe-env:
        description: Are we deploying to the production, staging, or development environment?
        type: string
        default: development
    executor: base
    steps:
      - run:
          name: Add deploy host to known_hosts
          command: echo 'git.wpengine.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEApRVAUwjz49VKfuENfyv52Dvh3qx9nWW/3Gb7R9pwABXUNQqkipt3aB7w2W6jOaEGFmzSr/4qhstUv0lvbeZu/1uRU/b6WrqULu+9bAdt9ll09QULfMxAIFWDwDS1F6GEZT+Yau/wLUI2VTZppxSVRIPe20/mxgXk8/Q9ha5tCaz+dQZ9lHWwk9rbDF+7LSVomLGM3e9dwr6mS4p37Qkje2cFJBqQcQ+RqEOTOD/xiFU0DH8TWO4R5yibQ0KEZVACkwhaAZSl81F7YZrrLEfsFS/llgpV3YZHQGvFi0x/ELAUJMFE9umdy9EwFF7/lTpV8zOGdiLW+v8svweWJJJ00w==' >> ~/.ssh/known_hosts

      # Set up our WPE_Install based on the environment
      - run:
          name: Set up the WPE Install name
          command: |
            echo 'export WPE_INSTALL=$( \
                case << parameters.wpe-env >> in \
                    production)  echo $WPE_PRODUCTION_INSTALL;; \
                    staging)     echo $WPE_STAGING_INSTALL;; \
                    development) echo $WPE_DEVELOPMENT_INSTALL;; \
                esac )' >> $BASH_ENV
            source $BASH_ENV
      # Set up the git remotes for WP Engine
      - run:
          name: Set up the WP Engine install git remotes
          command: |
            git config --global user.email "whereispolaris@gmail.com"
            git config --global user.name "WPE Circle CI Test"
            git remote add wpe git@git.wpengine.com:production/${WPE_INSTALL}.git
            git fetch wpe
      # Swap out our gitignore files, commit the build files, and push to the install
      - deploy:
          name: Commit build files and push to WPE remote
          command: |
            git checkout -b ${CIRCLE_BRANCH}-${CIRCLE_BUILD_NUM}
            unlink .gitignore; ln -s .gitignores/__deployment .gitignore
            unlink wp-content/plugins/wpengine-privacy-consent/.gitignore; ln -s wp-content/plugins/wpengine-privacy-consent/.gitignores/__deployment wp-content/plugins/wpengine-privacy-consent/.gitignore
            unlink wp-content/mu-plugins/wpengine-library/.gitignore; ln -s wp-content/mu-plugins/wpengine-library/.gitignores/__deployment wp-content/mu-plugins/wpengine-library/.gitignore
            git rm -r -q --cached --ignore-unmatch --force .circleci .github .gitignores composer.* gulpfile.babel.js package.json webpack.config.js yarn.lock .babelrc .editorconfig .eslintignore .eslintrc.json .stylelintrc codeception* tests
            git add .
            git commit -m "Deployment commit"
            git push wpe  ${CIRCLE_BRANCH}-${CIRCLE_BUILD_NUM}
            git push wpe :${CIRCLE_BRANCH}-${CIRCLE_BUILD_NUM}

workflows:
  version: 2

  build_test_deploy:
    jobs:
      - build_deploy:
          name: deploy-development
          wpe-env: development
          filters:
            branches:
              only: development

      - build_deploy:
          name: deploy-staging
          wpe-env: staging
          filters:
            branches:
              only: staging

      - build_deploy:
          name: deploy-production
          wpe-env: production
          requires:
            - lint
            - codeception
            - visual_regression
          filters:
            branches:
              only: master
